# -*- cmake -*-

include(FetchContent)
include(CheckCSourceCompiles)
include(CheckCXXSourceCompiles)

###
function(ct_check_linker_options VAR)
  set(CMAKE_REQUIRED_LINK_OPTIONS ${ARGN})
  if(MSVC)
    list(APPEND CMAKE_REQUIRED_LINK_OPTIONS "/WX")
  endif()
  check_c_source_compiles("int main() { return 0; }" "${VAR}")
endfunction()

ct_check_linker_options(CT_HAVE_LINKER_FLAG_NO_UNDEFINED "-Xlinker" "--no-undefined")

###
set(CT_CLAP_FETCH_VERSION "1.0.2")
set(CT_FMT_FETCH_VERSION "8.1.1")

FetchContent_Declare(clap
  GIT_REPOSITORY "https://github.com/free-audio/clap.git"
  GIT_TAG "${CT_CLAP_FETCH_VERSION}")

FetchContent_Declare(fmt
  GIT_REPOSITORY "https://github.com/fmtlib/fmt.git"
  GIT_TAG "${CT_FMT_FETCH_VERSION}")

###
add_library(ct-clap INTERFACE)
if(CT_CLAP_SOURCE_DIR)
  message(STATUS "External CLAP headers: ${CT_CLAP_SOURCE_DIR}/include")
  target_include_directories(ct-clap INTERFACE "${CT_CLAP_SOURCE_DIR}/include")
else()
  message(STATUS "Fetching CLAP: version ${CT_CLAP_FETCH_VERSION}")
  FetchContent_GetProperties(clap)
  if(NOT clap_POPULATED)
    FetchContent_Populate(clap)
  endif()
  message(STATUS "Fetched CLAP headers: ${clap_SOURCE_DIR}/include")
  target_include_directories(ct-clap INTERFACE "${clap_SOURCE_DIR}/include")
endif()

###
message(STATUS "Fetching fmt: version ${CT_FMT_FETCH_VERSION}")
FetchContent_GetProperties(fmt)
if(NOT fmt_POPULATED)
  FetchContent_Populate(fmt)
endif()
message(STATUS "Fetched fmt: ${fmt_SOURCE_DIR}")

add_library(ct-fmt STATIC EXCLUDE_FROM_ALL
  "${fmt_SOURCE_DIR}/src/format.cc"
  "${fmt_SOURCE_DIR}/src/os.cc")
target_include_directories(ct-fmt PUBLIC
  "${fmt_SOURCE_DIR}/include")
target_compile_definitions(ct-fmt
  PUBLIC "FMT_NAMESPACE=ct__fmt"
  PRIVATE "fmt=FMT_NAMESPACE")

###
add_library(ct-travesty INTERFACE)
target_include_directories(ct-travesty INTERFACE "thirdparty/travesty/include")
